import '@/lib/orpc.server';
import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { ThemeProvider } from "@/lib/theme-provider";
import { AuthProvider } from "@/components/ui/AuthProvider";
import { Providers } from '@/lib/provider';
import { Toaster } from '@/components/ui/sonner';

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

/**
 * Root layout component that composes global providers, base HTML structure, and app-level UI.
 *
 * Wraps application content with authentication, theming, and additional global providers, and mounts a global toaster.
 *
 * @param children - The page or application content to render inside the layout
 * @returns The root React element that contains the HTML and body structure with global providers and UI
 */
export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <AuthProvider>
      <html lang="en" suppressHydrationWarning>
        <body
          className={`${geistSans.variable} ${geistMono.variable} antialiased`}
        >
          <ThemeProvider
            attribute="class"
            defaultTheme="system"
            enableSystem
            disableTransitionOnChange
          >
            <Providers>
              {children}
            </Providers>
            <Toaster 
              closeButton
              position='top-center'
            />
          </ThemeProvider>
        </body>
      </html>
    </AuthProvider>
  );
}